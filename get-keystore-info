#!/bin/bash

# Stolen by luksi1
# from https://www.davidgouveia.net/2013/07/simple-script-to-check-expiry-dates-on-a-java-keystore-jks-file/
# The original script remains mostly intact with the exception that
# there is no threshold values. Rather, we simply bundle "issuer", "owner" and
# "days_remaining" into a JSON file and return it. 

TIMEOUT="timeout -k 10s 5s "
KEYTOOL="$TIMEOUT keytool"
KEYSTORE=""
PASSWORD=""
RET=0
RESULT=()
 
ARGS=`getopt -o "p:k:t:" -l "password:,keystore:" -n "$0" -- "$@"`
 
function usage {
        echo "Usage: $0 --keystore <keystore> [--password <password>] "
        exit
}
 
function start {
        CURRENT=`date +%s`

        i=0
	echo -n "{\"$(basename $KEYSTORE)\": {"
        $KEYTOOL -list -v -keystore "$KEYSTORE"  $PASSWORD 2>&1 > /dev/null
        if [ $? -gt 0 ]; then echo "Error opening the keystore."; exit 1; fi
 
        $KEYTOOL -list -v -keystore "$KEYSTORE"  $PASSWORD | grep Alias | awk '{print $3}' | while read ALIAS
        do
                if [[ $i -ne 0 ]]; then
                  echo -n ","
                fi
                i=$(($i+1))
                #Iterate through all the certificate alias
                EXPIRACY=`$KEYTOOL -list -v -keystore "$KEYSTORE"  $PASSWORD -alias $ALIAS | grep Valid`
                UNTIL=`$KEYTOOL -list -v -keystore "$KEYSTORE"  $PASSWORD -alias $ALIAS | grep Valid | perl -ne 'if(/until: (.*?)\n/) { print "$1\n"; }'`
                UNTIL_SECONDS=`date -d "$UNTIL" +%s`
                REMAINING_DAYS=$(( ($UNTIL_SECONDS -  $(date +%s)) / 60 / 60 / 24 ))
                ISSUER=`$KEYTOOL -list -v -keystore "$KEYSTORE"  $PASSWORD -alias $ALIAS | grep Issuer: | awk '{print substr($0, index($0,$2))}'`
                OWNER=`$KEYTOOL -list -v -keystore "$KEYSTORE"  $PASSWORD -alias $ALIAS | grep Owner: | awk '{print substr($0, index($0,$2))}'`
                echo -n "\"$ALIAS\": {\"days_remaining\": \"$REMAINING_DAYS\", \"issuer\": \"$ISSUER\", \"owner\": \"$OWNER\"}"
 
        done
        echo -n '}}'
        exit $RET
}
 
eval set -- "$ARGS"
 
while true
do
        case "$1" in
                -p|--password)
                        if [ -n "$2" ]; then PASSWORD=" -storepass $2"; else echo "Invalid password"; exit 1; fi
                        shift 2;;
                -k|--keystore)
                        if [ ! -f "$2" ]; then echo "Keystore not found: $1"; exit 1; else KEYSTORE=$2; fi
                        shift 2;;
                --)
                        shift
                        break;;
        esac
done
 
if [ -n "$KEYSTORE" ]
then
        start
else
        usage
fi
